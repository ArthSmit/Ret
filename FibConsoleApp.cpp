// FibConsoleApp.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <string>

using namespace std;

string foo0();
string foo1(int a, int b);
void foo2();

int main()
{
    /* const int ARRAY_SIZE = 10;
    cout << "Fibonacci Numbers\n";
    int x[ARRAY_SIZE] = {0,1,1,2,3,5,8,13,21,34};
    cout << x << "\n";
    cout << "{";
    // TODO вычислять количество шагов циикла автоматически
    for (int i = 0; i < ARRAY_SIZE; i++)
    {
        cout << x[i] << ((i < ARRAY_SIZE - 1) ? ", " : "");
    }
    cout << "}"; */
    cout << foo0() << " World!" << endl;
    for (int i = 0; i < 10; i++)
    {
        cout << foo1(2, i) << endl;
    }
    foo2();
    cout << foo1(2, 2) << endl;
}

string foo0() {
    // cout << "Hello World!" << endl;
    return "Hello";
}

string foo1(int a, int b) {
    // cout << a << " * " << b << " = " << a * b << endl;
    return to_string(a) + " * " + to_string(b) + " = " + to_string(a * b);
}

/* double fooD(double a, double b) {
    return a * b;
} */

void foo2() {
    cout << "The End!" << endl;
}

/*
Задача по написанию пользовательских функций:
1. объявите и реализуйте функцию, которая принимает два дробных числа (double) и возвращает результат вычитания первого числа из второго;
2. объявите и реализуйте функцию, которая принимает три дробных числа, ничего не возвращает,
и выводит в консоль строку вида a - b = с, где вместо a, b и c будут подставлены значения параметров,
например, вызов функции
subPrint(5, 4, 1);
выведет в консоль текст:
5 - 4 = 1
3. Вызовите эти две функции последовательно так, чтобы в консоли вывелась строка:
7.0 - 1.0 = 6.0
*/

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
